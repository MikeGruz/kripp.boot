xmax=estimate+qt(.025, df, lower.tail=F)*std.error),
height=0) +
geom_vline(xintercept=0, linetype="dashed", alpha=.5) +
theme_minimal()
mip.issue.perc %>% filter(mip_cap1==18) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_scatter()
mip.issue.perc %>% filter(mip_cap1==18) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point()
mip.issue.perc %>% filter(mip_cap1==18) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point(aes(colour=year(fw_start)))
mip.issue.perc %>% filter(mip_cap1==18) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point(aes(alpha=year(fw_start)))
mip.issue.perc %>% filter(mip_cap1==18) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point(aes(alpha=year(fw_start))) + theme_minimal()
mip.issue.perc %>% filter(mip_cap1==18 & year(fw_start) > 1989) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point() + theme_minimal()
mip.issue.perc %>% filter(mip_cap1==1 & year(fw_start) > 1989) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point() + theme_minimal()
mip.issue.perc %>% filter(mip_cap1==2 & year(fw_start) > 1989) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point() + theme_minimal()
mip.issue.perc %>% filter(mip_cap1==3 & year(fw_start) > 1989) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point() + theme_minimal()
mip.issue.perc %>% filter(mip_cap1==4 & year(fw_start) > 1989) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point() + theme_minimal()
mip.issue.perc %>% filter(mip_cap1==5 & year(fw_start) > 1989) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point() + theme_minimal()
mip.issue.perc %>% filter(mip_cap1==6 & year(fw_start) > 1989) %>% ggplot(., aes(x=Dem, y=Rep)) + geom_point() + theme_minimal()
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25) +
geom_smooth(method=lm, se=F, size=.25, colour="black") +
facet_wrap(~mip_cap1, scales="free") +
geom_abline(intercept = 0, slope=1) +
theme_bw()
knitr::opts_chunk$set(echo = TRUE)
require(tidyverse)
require(haven)
require(broom)
require(lubridate)
mip <- read_dta("~/Academic/data/mip_full/USMISC2015-MIPD_ind.dta")
mip.issue.perc <- mip %>%
filter(survey==23, party_id %in% c(-2,2)) %>%
mutate(party_id = ifelse(party_id==-2, "Dem", "Rep")) %>%
group_by(fw_start, party_id, mip_cap1) %>%
summarise(count = sum(weight)) %>%
ungroup %>% group_by(fw_start, party_id) %>%
mutate(perc = count/sum(count)) %>%
select(fw_start, mip_cap1, party_id, perc) %>%
spread(party_id, perc, fill=0) %>%
ungroup
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25) +
geom_smooth(method=lm, se=F, size=.25, colour="black") +
facet_wrap(~mip_cap1, scales="free") +
geom_abline(intercept = 0, slope=1) +
theme_bw()
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25) +
geom_smooth(method=lm, se=F, size=.25, colour="black") +
facet_wrap(~mip_cap1, scales="free") +
geom_abline(intercept = 0, slope=1, linetype="dashed", alpha=.5) +
theme_bw()
standardize
??standardize
mip.issue.perc %>% filter(mip_cap1==1) %>% do(tidy(arm::standardize(lm(.$Dem~.$Rep*year(.$fw_start)))))
mip.issue.perc %>% filter(mip_cap1==1) %>% do(tidy(lm(.$Dem~.$Rep*year(.$fw_start))))
mip.issue.perc %>% filter(mip_cap1==1) %>% do(tidy(lm(.$Dem~.$Rep*year(.$fw_start)))) %>% arm::standardize()
summary(lm(Dem~Rep*year(fw_start), data=filter(mip.issue.perc, mip_cap1==1)))
summary(lm(Dem~Rep*year(fw_start), data=filter(mip.issue.perc, mip_cap1==1))) %>% arm::standardize()
summary(lm(Dem~Rep*year(fw_start), data=filter(mip.issue.perc, mip_cap1==1))) %>% arm::standardize
fit <- lm(Dem~Rep*year(fw_start), data=filter(mip.issue.perc, mip_cap1==1))
display(fit)
arm::display(fit)
arm::display(arm::standardize(fit))
fit2 <- arm::standardize(fit)
summary(fit)
summary(lm(Dem~Rep*year(fw_start)), data=filter(mip.issue.perc, mip_cap1==1 & year(fw_start)>1999))
summary(lm(Dem~Rep*year(fw_start)), data=filter(mip.issue.perc, mip_cap1==1 & year(fw_start)>1998))
summary(lm(Dem~Rep*year(fw_start)), data=filter(mip.issue.perc, mip_cap1==1))
summary(lm(Dem~Rep*year(fw_start), data=filter(mip.issue.perc, mip_cap1==1 & year(fw_start)>1999)))
fit <- lm(Dem~Rep, data=filter(mip.issue.perc, mip_cap1==1))
fit
arm::standardize(fit)
sd2 <- function(x) return((x-mean(x, na.rm=T))/(sd(x, na.rm=T)*2))
x <- rnorm(100, 4, 1)
mean(x)
mean(sd2(x))
x <- rnorm(100, 4, 2.5)
mean(sd2(x))
sd(sd2(x))
rbinom(10,1,1)
rbinom(10,1,1)
rbinom(10,0,1)
rbinom(10,1,.5)
mean(sd2(rbinom(10,1,.5)))
sd(sd2(rbinom(10,1,.5)))
sd(rbinom(10,1,.5))
sd(rbinom(10,1,.5))
sd(rbinom(10,1,.5))
sd(rbinom(10,1,.5))
sd(rbinom(10,1,.5))
?mutate_at
mip.issue.perc %>%
group_by(mip_cap1) %>%
mutate_all(sd2)
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
group_by(mip_cap1) %>%
mutate_all(sd2)
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2)
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2) %>%
do(tidy(lm(.$Dem~.$Rep*.$year)))
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2) %>%
do(tidy(lm(.$Dem~.$Rep*.$year))) %>%
filter(term==".$Rep:.$year")
mip.issue.2sd <- mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2)
plot(effects::allEffects(lm(Dem~Rep*year, data=mip.issue.2sd)))
plot(effects::allEffects(lm(Dem~Rep*year, data=filter(mip.issue.2sd, mip_cap1==1))))
plot(effects::allEffects(lm(Dem~Rep*year, data=filter(mip.issue.2sd, mip_cap1==2))))
plot(effects::allEffects(lm(Dem~Rep*year, data=filter(mip.issue.2sd, mip_cap1==3))))
plot(effects::allEffects(lm(Dem~Rep*year, data=filter(mip.issue.2sd, mip_cap1==4))))
plot(effects::allEffects(lm(Dem~Rep*year, data=filter(mip.issue.2sd, mip_cap1==5))))
plot(effects::allEffects(lm(Dem~Rep*year, data=filter(mip.issue.2sd, mip_cap1==6))))
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2) %>%
do(tidy(lm(.$Dem~.$Rep*.$year)))
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2) %>%
do(tidy(lm(.$Dem~.$Rep*.$year))) %>%
pander::pander
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2) %>%
do(tidy(lm(.$Dem~.$Rep*.$year))) %>%
pander::pander(.)
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2) %>%
do(tidy(lm(.$Dem~.$Rep*.$year))) %>%
filter(term==".$Rep:.$year") %>%
ggplot(., aes(x=estimate, y=reorder(mip_cap1, estimate))) +
geom_point()
mip.issue.perc %>%
mutate(year=year(fw_start)) %>%
select(-fw_start) %>%
group_by(mip_cap1) %>%
mutate_all(sd2) %>%
do(tidy(lm(.$Dem~.$Rep*.$year))) %>%
filter(term==".$Rep:.$year") %>%
ggplot(., aes(x=estimate, y=reorder(mip_cap1, estimate))) +
geom_point() +
geom_errorbarh(aes(xmin=estimate-1.96*std.error, xmax=estimate+1.96*std.error), height=0) +
theme_minimal()
nes <- read_dta("~/Academic/other_work/tmw_pol_behav/anes_data/anes2012TS_dta/anes_2012TS_ftf.dta")
unique(nes$inc_incgroup_pre)
nes %>%
mutate(hispanic=ifelse(dem_hisp==1, 1, ifelse(dem_hisp==2,0,NA)),
black = dem_racecps_black,
income = ifelse(inc_incgroup_pre > 0, inc_incgroup_pre, NA)) %>%
write_csv(., "~/Academic/apsu_classes/2017spring/pols3760/linares.csv")
nes %>%
mutate(hispanic=ifelse(dem_hisp==1, 1, ifelse(dem_hisp==2,0,NA)),
black = dem_racecps_black,
income = ifelse(inc_incgroup_pre > 0, inc_incgroup_pre, NA)) #%>%
nes %>%
mutate(hispanic=ifelse(dem_hisp==1, 1, ifelse(dem_hisp==2,0,NA)),
black = dem_racecps_black,
income = ifelse(inc_incgroup_pre > 0, inc_incgroup_pre, NA)) %>%
select(hispanic:income)
nes %>%
mutate(hispanic=ifelse(dem_hisp==1, 1, ifelse(dem_hisp==2,0,NA)),
black = dem_racecps_black,
income = ifelse(inc_incgroup_pre > 0, inc_incgroup_pre, NA)) %>%
select(hispanic:income) %>%
write_csv(., "~/Academic/apsu_classes/2017spring/pols3760/linares.csv")
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25) +
geom_smooth(method=lm, se=F, size=.25, colour="black") +
facet_wrap(~mip_cap1, scales="free") +
geom_abline(intercept = 0, slope=1, linetype="dashed", alpha=.5) +
theme_bw()
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25, aes(alpha=year(fw_start))) +
geom_smooth(method=lm, se=F, size=.25, colour="black") +
facet_wrap(~mip_cap1, scales="free") +
geom_abline(intercept = 0, slope=1, linetype="dashed", alpha=.5) +
theme_bw()
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25, aes(alpha=year(fw_start))) +
geom_smooth(method=lm, se=F, size=.25, colour="black",
aes(linetype=floor(year(fw_start)*10)/10)) +
facet_wrap(~mip_cap1, scales="free") +
#geom_abline(intercept = 0, slope=1, linetype="dashed", alpha=.5) +
theme_bw()
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25, aes(alpha=year(fw_start))) +
geom_smooth(method=lm, se=F, size=.25, colour="black",
aes(alpha=floor(year(fw_start)*10)/10)) +
facet_wrap(~mip_cap1, scales="free") +
#geom_abline(intercept = 0, slope=1, linetype="dashed", alpha=.5) +
theme_bw()
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25, aes(alpha=year(fw_start))) +
geom_smooth(method=lm, se=F, size=.25, colour="black",
aes(colour=floor(year(fw_start)*10)/10)) +
facet_wrap(~mip_cap1, scales="free") +
#geom_abline(intercept = 0, slope=1, linetype="dashed", alpha=.5) +
theme_bw()
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25, aes(alpha=year(fw_start))) +
geom_smooth(method=lm, se=F, size=.25, colour="black") +
facet_wrap(~mip_cap1, scales="free") +
#geom_abline(intercept = 0, slope=1, linetype="dashed", alpha=.5) +
theme_bw()
mip.issue.perc %>%
ggplot(., aes(x=Dem, y=Rep)) + geom_point(size=.25, aes(alpha=year(fw_start))) +
geom_smooth(method=lm, se=F, size=.25, colour="black") +
facet_wrap(~mip_cap1, scales="free") +
geom_abline(intercept = 0, slope=1, linetype="dashed", alpha=.5) +
theme_bw()
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA))) %>%
spread(mip_cap1)
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1) %>%
spread(mip_cap1, x, fill=0)
View(mip.inds)
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1) %>%
select(fw_start, dem.rep, mip_cap1, x) %>%
spread(mip_cap1, x, fill=0)
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = n()) %>%
select(fw_start, dem.rep, mip_cap1, x, id) %>%
spread(mip_cap1, x, fill=0)
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = n()) %>%
filter(!is.na(party_id)) %>%
select(fw_start, dem.rep, mip_cap1, x, id) %>%
spread(mip_cap1, x, fill=0)
data_frame(x=c("mike","kate"), y=c(1,2)) %>% spread(x,y)
data_frame(x=c("mike","kate"), y=c(1,2)) %>% spread(y,x)
mip.inds <- mip %>% ungroup %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = n()) %>%
filter(!is.na(party_id)) %>%
select(fw_start, dem.rep, mip_cap1, x, id) %>%
spread(mip_cap1, x, fill=0)
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = n()) %>%
filter(!is.na(party_id)) %>%
unite(fw_start, fw_start, id, sep="_") %>%
select(fw_start, dem.rep, mip_cap1, x, id) %>%
spread(mip_cap1, x, fill=0)
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = n()) %>%
filter(!is.na(party_id)) %>%
unite(fw_start, fw_start, id, sep="_") %>%
select(fw_start, dem.rep, mip_cap1, x) %>%
spread(mip_cap1, x, fill=0)
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = n()) %>%
filter(!is.na(party_id)) %>%
unite(fw_start, fw_start, id, sep="_") %>%
select(fw_start, dem.rep, mip_cap1, x) %>% View
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = n()) %>% View
?n()
View(mip)
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = cumsum(x)) %>%
filter(!is.na(party_id)) %>%
select(fw_start, dem.rep, mip_cap1, x, id) %>%
spread(mip_cap1, x, fill=0)
View(mip.inds)
unique(mip.inds$dem.rep)
summary(glm(`1`~dem.rep, family=binomial, data=mip.inds))
summary(glm(`1`~dem.rep*year(fw_start), family=binomial, data=mip.inds))
summary(glm(`2`~dem.rep*year(fw_start), family=binomial, data=mip.inds))
summary(glm(`3`~dem.rep*year(fw_start), family=binomial, data=mip.inds))
summary(glm(`4`~dem.rep*year(fw_start), family=binomial, data=mip.inds))
exp(123)
summary(glm(`9`~dem.rep*year(fw_start), family=binomial, data=mip.inds))
plot(effects::allEffects(glm(`9`~dem.rep*year(fw_start), family=binomial, data=mip.inds)))
mip.inds <- mip %>%
filter(survey==23 & !is.na(mip_cap1)) %>%
mutate(year = year(fw_start),
dem.rep = ifelse(party_id==-2, 1, ifelse(party_id==2, 0, NA)),
x = 1,
id = cumsum(x)) %>%
filter(!is.na(party_id)) %>%
select(year, dem.rep, mip_cap1, x, id) %>%
spread(mip_cap1, x, fill=0)
plot(effects::allEffects(glm(`9`~dem.rep*year, family=binomial, data=mip.inds)))
exp(38)
summary(glm(`9`~dem.rep*year(fw_start), family=binomial, data=mip.inds))
summary(glm(`9`~dem.rep*year, family=binomial, data=mip.inds))
exp(-.0184 + 38.88)/(1 + exp(-.0184 + 38.88))
fix(sd2)
require(haven)
require(tidyverse)
require(acs)
acs
require(tidyverse)
mi <- acs::geo.make(state="Michigan")
fips.state
??fips.state
acs::fips.state
mi <- acs::geo.make(state=26)
require(acs)
require(tidyverse)
mi <- acs::geo.make(state=26)
mi
mi.employ <- acs.fetch(geo=mi, table.number="S2301")
mi.employ <- acs.fetch(geo=mi, table.number="S2301", endyear=2017)
mi.employ <- acs.fetch(geo=mi, table.number="S2301", endyear=2016)
mi.employ <- acs.fetch(geo=mi, table.number="S2301", endyear=2015)
mi.employ <- acs.fetch(geo=mi, table.number="S02301", endyear=2015)
mi.employ <- acs.fetch(geo=mi, table.number="S2301", case.sensitive=F, endyear=2015)
mi.employ <- acs.fetch(geo=mi, table.name = "Employment Status", case.sensitive=F, endyear=2015)
mi.employ
geo.make(state="Michigan", county = "*")
mi <- geo.make(state="Michigan", county = "*")
mi.employ <- acs.fetch(geo=mi, table.name = "Employment Status", case.sensitive=F, endyear=2015)
mi.employ
as_data_frame(mi.employ)
objects(mi.eploy)
objects(mi.employ)
mi.employ[1,]
acs.lookup(endyear=2015, keyword="Employment Status")
acs.lookup(endyear=2015, keyword="Employment")
acs.lookup(endyear=2015, keyword="Employment", case.sensitive = F)
acs.lookup(endyear=2015, keyword="employ", case.sensitive = F)
mi <- geo.make(state="Michigan", county = *)
mi <- geo.make(state="Michigan", county = "*")
mi
acs.lookup(endyear = 2015, keyword="unemployment", case.sensitive = F)
l <- acs.lookup(endyear=2015, keyword="employ", case.sensitive = F)
l
l[1]
l[2]
l[2][table.name]
l[2]["table.name"]
l[2]
l[2][2]
l[2][1]
l[2]["table.number"]
l[2]["results"]
l["results"]
l[1]
list(l[1])
unlist(l[1])
emp <- acs.lookup(table.name="Employment Status")
emp <- acs.lookup(table.name="Employment Status", endyear=2015)
emp
emp[1]
emp[2]
emp[3]
emp[4]
emp[1:2]
emp
emp <- acs.lookup(table.name="Employment Status", keyword = "unemployment rate", endyear=2015)
emp <- acs.lookup(keyword = "unemployment rate", endyear=2015)
emp <- acs.lookup(keyword = "unemployment rate", endyear=2015, case.sensitive = F)
acs.lookup(endyear=2015, table.name="unemployment by sex", case.sensitive = F)
acs.lookup(endyear=2015, table.name="unemployment rate by sex", case.sensitive = F)
gss <- read_dta("~/Academic/data/gss/GSS7216_R1a.dta")
require(haven)
gss <- read_dta("~/Academic/data/gss/GSS7216_R1a.dta")
unique(gss$year)
unique(gss$polviews)
1:3 - 3
3 - 1:3
5:7 - 7
5:7 - 5
gss %>%
mutate(
libviews = ifelse(polviews %in% 1:3, 3-polviews, NA),
conviews = ifelse(polviews %in% 5:7, polviews-5, NA),
) %>%
group_by(year) %>%
summarise(mean.lib = mean(libviews, na.rm=T),
mean.con = mean(conviews, na.rm=T)) %>%
gather(key, value, -year) %>%
ggplot(., aes(x=year, y=value)) + geom_line(aes(linetype=key))
gss %>%
mutate(
libviews = ifelse(polviews %in% 1:3, 3-polviews, NA),
conviews = ifelse(polviews %in% 5:7, polviews-5, NA),
) %>%
group_by(year) %>%
summarise(mean.lib = mean(libviews, na.rm=T),
mean.con = mean(conviews, na.rm=T)) %>%
gather(key, value, -year)
gss %>%
mutate(
libviews = ifelse(polviews %in% 1:3, 3-polviews, NA),
conviews = ifelse(polviews %in% 5:7, polviews-5, NA),
) %>%
group_by(year) %>%
summarise(mean.lib = mean(libviews, na.rm=T),
mean.con = mean(conviews, na.rm=T)) %>%
ungroup %>%
gather(key, value, -year)
gss %>%
mutate(
libviews = ifelse(polviews %in% 1:3, 3-polviews, NA),
conviews = ifelse(polviews %in% 5:7, polviews-5, NA),
) %>%
group_by(year) %>%
summarise(mean.lib = mean(libviews, na.rm=T),
mean.con = mean(conviews, na.rm=T)) #%>%
gss %>%
mutate(
libviews = ifelse(polviews %in% 1:3, 3-polviews, NA),
conviews = ifelse(polviews %in% 5:7, polviews-5, NA),
) #%>%
gss$polviews
is.factor(gss$polviews)
read_dta
acs.lookup
setwd("~/Academic/Programming/R")
setwd("kripp.boot/")
install("kripp.boot")
require(devtools)
install("kripp.boot")
list.files()
setwd("..")
install("kripp.boot")
build()
setwd("kripp.boot/")
build()
build()
document()
build_win()
setwd("..")
install("kripp.boot")
document()
install("kripp.boot")
setwd("kripp.boot/")
document()
document()
install("../kripp.boot/")
document()
install("../kripp.boot/")
x <- matrix(sample(1:3, replace=T, size=10))
x
x <- matrix(sample(1:3, replace=T, size=10), nrow=1)
x
x[2,] <- x[1,] + sample(c(-1:1), replace=T, size=10)
x <- matrix(c(x[1,], x[1,]+sample(-1:1, replace=T, size=10)), nrow=2)
x
kripp.boot(x)
x[2,]
x[2,] <- x[1,] + sample(c(-1,0,1), replace=T, size=10)
x
kripp.boot(x)
build_win()
?irr::kripp.alpha
kripp.boot(x)
kripp.boot(x)$alpha
kripp.boot(x)$mean.alpha
x <- matrix(sample(0:1, replace=T, size=100), nrow=2)
x
kripp.boot(x)
kripp.boot(x)$alpha
kripp.boot(x)$mean.alpha
nmm<-matrix(c(1,1,NA,1,2,2,3,2,3,3,3,3,3,3,3,3,2,2,2,2,1,2,3,4,4,4,4,4,
1,1,2,1,2,2,2,2,NA,5,5,5,NA,NA,1,1,NA,NA,3,NA),nrow=4)
irr::kripp.alpha(nmm)
